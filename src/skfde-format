#!/bin/bash

set -euo pipefail

SKFDE_CONFIG_FILE="/etc/skfde.conf"
SKFDE_LUKS_DEV=""
SKFDE_RESPONSE=""
SKFDE_PASSPHRASE=""

if [ -r "$SKFDE_CONFIG_FILE" ]; then
  . "$SKFDE_CONFIG_FILE"
else
  echo "Failed to read the SKFDE configuration file '$SKFDE_CONFIG_FILE'"
  exit 1
fi

if [ -z "$SKFDE_CHALLENGE" ]; then
  echo "ERROR: solokey challenge is empty. Check the $SKFDE_CONFIG_FILE file."
  exit 1
fi

if [ -z "$SKFDE_CREDENTIAL" ]; then
  echo "ERROR: solokey credential is empty. Check the $SKFDE_CONFIG_FILE file."
  exit 1
fi

if [ -z "$SKFDE_RESPONSE" ]; then
  read -s -p "Enter the SoloKey PIN: " PIN
  echo -e "\nRemember to press the SoloKey button if necessary"
  SKFDE_RESPONSE="$(echo -n ${PIN} | fido2luks print-secret $SKFDE_CREDENTIAL \
    --salt string:$SKFDE_CHALLENGE --pin --pin-source /dev/stdin 2>&1)"
  SKFDE_PASSPHRASE="$SKFDE_RESPONSE"
fi

if [ "$SKFDE_PASSPHRASE" ]; then
  printf '%s\n' " Formatting the device with cryptsetup..."
  printf '%s\n' "$SKFDE_PASSPHRASE" | cryptsetup luksFormat "$@"
  _res=$?
  if [ "$_res" -eq 0 ]; then
    printf '%s\n' " Device successfully formatted."
    exit 0
  fi
else
  echo "ERROR: solokey passphrase is empty"
  exit 1
fi
